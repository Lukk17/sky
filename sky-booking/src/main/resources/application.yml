# ==================================================================================================================
sky:
  helloWorld: <center><h1>Welcome to Booking app.</h1></center>
  apiPrefix: /api
  offerServiceAddress: ${OFFER_SERVICE_ADDRESS:offer-service}
  offerOwnerEndpoint: owners
  offerServicePort: 5552

# SPRING setup

server:
  port: ${BOOKING_PORT:5555}

spring:
  application:
    name: sky-booking
  web:
    # location from http header
    locale-resolver: accept_header
  mvc:
    # for option request handling
    dispatch-options-request: true
  security:
    # default user for spring security (will stop printing autogenerated password when Spring starts)
    user:
      name: ${SPRING_SECURITY_USER:XYZ}
      password: ${SPRING_SECURITY_PASS:XYZ}
  jpa:
    #   type of database operations on app start
    hibernate.ddl-auto: update
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: ${SHOW_SQL_QUERIES:false}
    properties:
      hibernate:
        jdbc:
          # If DB timezone is set to UTC and it differ with your current then it will save date wrong
          # Example: 2020-03-28 was saved as 2020-03-27
          time_zone: Europe/Warsaw

  # IMPORTANT#1 : DOCKER OVERWRITE IT, SO TO CHANGE THIS VALUES YOU NEED TO CHANGE DOCKER .env FILE
  datasource:
    url: ${SPRING_DATASOURCE_URL}:jdbc:mysql://host.docker.internal:3306/sky}
    hikari:
      connection-timeout: 60000
      validation-timeout: 60000
#      instead of adding as DB URL parameter:
      data-source-properties:
        useUnicode: true
        characterEncoding: UTF-8
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASS:Lukk1234}
    driver-class-name: com.mysql.cj.jdbc.Driver

  kafka:
    bootstrap-servers: ${KAFKA_ADDRESS:kafka-service}:${KAFKA_PORT:9092}
    producer:
      client-id: bookingService
    admin:
      auto-create: true



# expose actuator endpoints (* for all)
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true

logging:
  level:
    org:
      springframework:
        web: ${SPRING_DEBUG:INFO}
      hibernate: ${HIBERNATE_DEBUG:WARN}
      apache:
        kafka:
          clients:
            admin:
              AdminClientConfig: WARN
            producer:
              ProducerConfig: WARN

