{
	"info": {
		"_postman_id": "760f3b12-41b1-47fb-a310-30c0a09f999f",
		"name": "sky",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6370134"
	},
	"item": [
		{
			"name": "Auth0 Code Flow",
			"item": [
				{
					"name": "1. Get to /authorize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GetState\", function () {",
									"    console.log(`Retrieving STATE...`)",
									"    let state = pm.response.headers.get('Location');",
									"    state = state.slice(state.lastIndexOf('=') + 1);",
									"    ",
									"    pm.environment.set(\"state\", state);",
									"    console.log(`Setting STATE (${state}) as environmental variable.`);",
									"",
									"    pm.response.to.have.status(302);",
									"",
									"    // works only in via postman runner",
									"    // postman.setNextRequest(\"2. Post to /u/login\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{auth0_domain}}/authorize?response_type=code&client_id={{auth0_client_id}}&redirect_uri={{redirect_uri}}",
							"protocol": "https",
							"host": [
								"{{auth0_domain}}"
							],
							"path": [
								"authorize"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{auth0_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_uri}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Post to /u/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GetResumeState\", function () {",
									"    console.log(`Retrieving RESUME_STATE...`)",
									"    let resume_state = pm.response.headers.get('Location');",
									"    resume_state = resume_state.slice(resume_state.lastIndexOf('=') + 1);",
									"    ",
									"    pm.environment.set(\"resume_state\", resume_state);",
									"",
									"    pm.response.to.have.status(302);",
									"",
									"    // works only in via postman runner",
									"    // postman.setNextRequest(\"2. Post to /u/login\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{auth0_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{auth0_password}}",
									"type": "text"
								},
								{
									"key": "state",
									"value": "{{state}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{auth0_domain}}/u/login?state={{state}}",
							"protocol": "https",
							"host": [
								"{{auth0_domain}}"
							],
							"path": [
								"u",
								"login"
							],
							"query": [
								{
									"key": "state",
									"value": "{{state}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Get to /resume",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GetCode\", function () {",
									"    console.log(`Retrieving CODE...`)",
									"    let code = pm.response.headers.get('Location');",
									"    code = code.slice(code.lastIndexOf('=') + 1);",
									"",
									"    pm.environment.set(\"code\", code);",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{auth0_domain}}/authorize/resume?state={{resume_state}}",
							"protocol": "https",
							"host": [
								"{{auth0_domain}}"
							],
							"path": [
								"authorize",
								"resume"
							],
							"query": [
								{
									"key": "state",
									"value": "{{resume_state}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Exchange CODE against a TOKEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GetToken\", function () {",
									"    console.log(`Retrieving TOKENS...`)",
									"    let tokens = pm.response.json();",
									"    ",
									"    console.log(tokens);",
									"    console.log(tokens.access_token);",
									"",
									"    pm.environment.set(\"sky-token\", tokens.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{auth0_client_id}}",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{code}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_uri}}",
									"type": "text"
								},
								{
									"key": "audience",
									"value": "{{audience}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{auth0_domain}}/oauth/token",
							"protocol": "https",
							"host": [
								"{{auth0_domain}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "This is the OAuth 2.0 grant that regular web apps utilize in order to access an API. Use this endpoint to exchange an Authorization Code for an Access Token."
					},
					"response": []
				},
				{
					"name": "workaround for auth0 no information callback",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GetResumeState\", function () {\r",
									"\r",
									"    // callback redirect to rooth path which is not setup in ingress\r",
									"    pm.response.to.have.status(404);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/api/owner/offers",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"api",
								"owner",
								"offers"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Offer Service",
			"item": [
				{
					"name": "Home",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/api/home",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"api",
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllOffers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/api/offers",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"api",
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "getOwnedOffers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/api/owner/offers",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"api",
								"owner",
								"offers"
							]
						}
					},
					"response": []
				},
				{
					"name": "addOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GetOfferId\", function () {\r",
									"    console.log(`Retrieving createdOfferID...`)\r",
									"    const body = pm.response.json()\r",
									"    const id = body[\"id\"]\r",
									"    \r",
									"    pm.environment.set(\"createdOfferID\", id);\r",
									"    console.log(`RetrivedId: ` + id)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"hotelName\": \"Sheraton\",\r\n\t\"description\": \"nad morzem\",\r\n\t\"comment\": \"suparaste fale\",\r\n\t\"price\": \"100\",\r\n\t\"roomCapacity\": \"5\",\r\n\t\"city\": \"Gdansk\",\r\n\t\"country\": \"Poland\",\r\n\t\"photoPath\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS6o46GoemfaQuUj2482kPKuoAkajx3qIQ7xHujIGB2IMMWziE3\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/api/owner/offer",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"api",
								"owner",
								"offer"
							]
						}
					},
					"response": []
				},
				{
					"name": "editOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbkBhZG1pbiIsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXSwiaWF0IjoxNTg1OTQ2NDQ3LCJleHAiOjE1ODYwMzI4NDd9.85chOYliB_ikaXOBMA6pXGjop6snE8MSwrL083-dtZ8mCVOIf0zw721htI_KZjK15LlvGFLefPoArgVHxv6b1g",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"id\": {{createdOfferID}},\r\n\t\"price\": \"456\",\r\n\t\"roomCapacity\": \"52\"\r\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/api/owner/offer",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"api",
								"owner",
								"offer"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbkBhZG1pbiIsImF1dGhvcml0aWVzIjpbIlJPTEVfQURNSU4iXSwiaWF0IjoxNTg1OTQ2NDQ3LCJleHAiOjE1ODYwMzI4NDd9.85chOYliB_ikaXOBMA6pXGjop6snE8MSwrL083-dtZ8mCVOIf0zw721htI_KZjK15LlvGFLefPoArgVHxv6b1g",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/api/owner/offer/{{createdOfferID}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"api",
								"owner",
								"offer",
								"{{createdOfferID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "searchForOffers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Gdansk"
						},
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/api/search",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"api",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "inner getOfferOwnerEmail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/offer\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5552/offer/owner/offer/{{createdOfferID}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5552",
							"path": [
								"offer",
								"owner",
								"offer",
								"{{createdOfferID}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Booking Service",
			"item": [
				{
					"name": "Home",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/booking\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Forwarded-User",
								"value": "booking@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5555/booking/api/",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5555",
							"path": [
								"booking",
								"api",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getBookedOffers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/booking\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "booking@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5555/booking/api/user/bookings",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5555",
							"path": [
								"booking",
								"api",
								"user",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "bookOffer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/booking\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GetOfferId\", function () {\r",
									"    console.log(`Retrieving Booking ID...`)\r",
									"    const body = pm.response.json()\r",
									"    const id = body[\"id\"]\r",
									"\r",
									"    pm.environment.set(\"createdBookingID\", id);\r",
									"    console.log(`RetrivedId: ` + id)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "booking@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"offerId\": {{createdOfferID}},\n\t\"dateToBook\": \"2025-09-09\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5555/booking/api/bookings",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5555",
							"path": [
								"booking",
								"api",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBooking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/booking\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "booking@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5555/booking/api/bookings/{{createdBookingID}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5555",
							"path": [
								"booking",
								"api",
								"bookings",
								"{{createdBookingID}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Message Service",
			"item": [
				{
					"name": "Home",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/msg\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Forwarded-User",
								"value": "message@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5553/msg/api/",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5553",
							"path": [
								"msg",
								"api",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getSentMessages",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/msg\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							},
							{
								"key": "X-Forwarded-User",
								"value": "booking@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5553/msg/api/messages/sent",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5553",
							"path": [
								"msg",
								"api",
								"messages",
								"sent"
							]
						}
					},
					"response": []
				},
				{
					"name": "getReceivedMessages",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/msg\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							},
							{
								"key": "X-Forwarded-User",
								"value": "booking@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5553/msg/api/messages/received",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5553",
							"path": [
								"msg",
								"api",
								"messages",
								"received"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendMessage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/msg\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GetMessageId\", function () {\r",
									"    console.log(`Retrieving createdMessageID...`)\r",
									"    const body = pm.response.json()\r",
									"    const id = body[\"id\"]\r",
									"    \r",
									"    pm.environment.set(\"createdMessageID\", id);\r",
									"    console.log(`RetrivedId: ` + id)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							},
							{
								"key": "X-Forwarded-User",
								"value": "booking@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"testowo\",\n    \"receiverEmail\": \"offer@owner.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5553/msg/api/message",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5553",
							"path": [
								"msg",
								"api",
								"message"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteMessage",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if the environment is localhost.\r",
									"if (pm.environment.name === \"localhost\") {\r",
									"    // Remove \"/offer\" path prefix for localhost\r",
									"    pm.request.url = pm.request.url.toString().replace(\"/msg\", \"\");\r",
									"\r",
									"} else {\r",
									"  // Remove the port number from the URL and set the URL in the request.\r",
									"    pm.request.url = pm.request.url.toString().replace(/:\\d{4}/g, \"\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{sky-token}}",
								"type": "text",
								"description": "from Auth0 code flow"
							},
							{
								"key": "X-Forwarded-User",
								"value": "offer@owner.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							},
							{
								"key": "X-Forwarded-User",
								"value": "booking@user.com",
								"type": "text",
								"description": "local dev only without kubernetes",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{baseUrl}}:5553/msg/api/message/{{createdMessageID}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{baseUrl}}"
							],
							"port": "5553",
							"path": [
								"msg",
								"api",
								"message",
								"{{createdMessageID}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}